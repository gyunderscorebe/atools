// Admin tools by gy_be (version 0.2.0)
//
// How to install: download this file and put it into `config/` directory
// as `atools.cfg` and add `exec config/atools.cfg` to `autoexec.cfg`.
//
// How to configure: press `X` to open admin tools menu,
// there you can set some settings and list servers you have admin on.
// Servers are organized into groups that share same password.
// Server groups for w00p, frag.gq, and PSY servers are built-in,
// just edit in the password if you know it.
//
// Added commands:
//
//      aban - instant ban by client number
//      abanname - instant ban by name
//      abanip - instant ban by IP
//      akick - instant kick
//      whoare - list IPs of all players without claiming admin
//      awhoare - list full IPs of all players
//      findcnbyip - get client number by IP
//      claimadmin - claim admin
//      withadmin - execute a command as admin
//
// See in-game documentation for more information.

persistidents 1

checkinit mapstartalways ::amenu::detect
check2init ::atools::use_name 0
check2init ::atools::name ""
check2init ::atools::auto_drop 0
check2init ::atools::take_ss 1

persistidents 0

// Admin menu start

::amenu::perm_alias = [
    ::amenu::perm_alias::persistidents = $persistidents
    persistidents 1
    alias $arg1 $arg2
    persistidents $::amenu::perm_alias::persistidents
    delalias ::amenu::perm_alias::persistidents
]

::amenu::get_server_var = [
    result (concatword "::amenu::server_group_" $arg1 "_" $arg2)
]

::amenu::get_descr_var = [
    result (concatword "::amenu::server_descr_" $arg1 "_" $arg2)
]

::amenu::get_password_var = [
    result (concatword "::amenu::group_password_" $arg1)
]

::amenu::get_servers_var = [
    result (concatword "::amenu::group_servers_" $arg1)
]

::amenu::splitout_ip = [
    result (substr $arg1 0 (strpos $arg1 ":"))
]

::amenu::splitout_port = [
    result (substr $arg1 (+ 1 (strpos $arg1 ":")))
]

::amenu::have_current_server = [
    ::amenu::have_current_server::server_var = (::amenu::get_server_var (curserver 1) (curserver 3))
    result (checkalias $::amenu::have_current_server::server_var)
]

addListOnQuit [::amenu::have_current_server::server_var]

::amenu::current_server_group = [
    ::amenu::current_server_group::server_var = (::amenu::get_server_var (curserver 1) (curserver 3))
    result (getalias $::amenu::current_server_group::server_var)
]

addListOnQuit [::amenu::current_server_group::server_var]

::amenu::detect = [
    ::amenu::detect::password = ""

    if (::amenu::have_current_server) [
        ::amenu::detect::server_group = (::amenu::current_server_group)
        ::amenu::detect::password = (getalias (::amenu::get_password_var $::amenu::detect::server_group))

        if (strcmp $::amenu::detect::password "!") [
            echo (concatword "Detected '" $::amenu::detect::server_group "' server but no password is set.")
            ::amenu::detect::password = ""
        ] [
            echo (concatword "Detected '" $::amenu::detect::server_group "' server, admin tools are ready.")
        ]
    ] [
        echo "Could not detect server."
    ]

    apassword = $::amenu::detect::password
]

addListOnQuit [::amenu::detect::password ::amenu::detect::server_group ::amenu::detect::password]

::amenu::perm_alias = [
    ::amenu::perm_alias::persistidents = $persistidents
    persistidents 1
    alias $arg1 $arg2
    persistidents $::amenu::perm_alias::persistidents
]

addListOnQuit [::amenu::perm_alias::persistidents]

::amenu::perm_add2list = [
    if (strcmp (getalias $arg1) "!") [
        ::amenu::perm_alias $arg1 $arg2
    ] [
        ::amenu::perm_alias $arg1 (concat (getalias $arg1) $arg2)
    ]
]

::amenu::perm_replace = [
    ::amenu::perm_replace::new_list = ""

    looplist (getalias $arg1) ::amenu::perm_replace::value [
        if (strcmp $::amenu::perm_replace::value $arg2) [
            add2list ::amenu::perm_replace::new_list $arg3
        ] [
            add2list ::amenu::perm_replace::new_list $::amenu::perm_replace::value
        ]
    ]

    ::amenu::perm_alias $arg1 $::amenu::perm_replace::new_list
]

addListOnQuit [::amenu::perm_replace::new_list ::amenu::perm_replace::value]

::amenu::perm_remove = [
    ::amenu::perm_remove::new_list = ""

    looplist (getalias $arg1) ::amenu::perm_remove::value [
        if (! (strcmp $::amenu::perm_remove::value $arg2)) [
            add2list ::amenu::perm_remove::new_list $::amenu::perm_remove::value
        ]
    ]

    if (strcmp $::amenu::perm_remove::new_list "") [
        ::amenu::perm_alias $arg1 "!"
    ] [
        ::amenu::perm_alias $arg1 $::amenu::perm_remove::new_list
    ]
]

addListOnQuit [::amenu::perm_remove::new_list ::amenu::perm_remove::value]

::amenu::validate_ip = [
    ::amenu::validate_ip::value = $arg1
    ::amenu::validate_ip::res = ""

    if (strcmp $::amenu::validate_ip::value "") [
        ::amenu::validate_ip::res = "IP can not be empty"
    ] [
        parsestring $::amenu::validate_ip::value ::amenu::validate_ip::char [
            if (! (|| (strcmp $::amenu::validate_ip::char ".") (testchar $::amenu::validate_ip::char 0))) [
                ::amenu::validate_ip::res = "IP can contain only dots and digits"
                breakparse
            ]
        ]
    ]

    result $::amenu::validate_ip::res
]

addListOnQuit [::amenu::validate_ip::value ::amenu::validate_ip::res ::amenu::validate_ip::char __::amenu::validate_ip::char]

::amenu::validate_port = [
    ::amenu::validate_port::value = $arg1
    ::amenu::validate_port::res = ""

    if (strcmp $::amenu::validate_port::value "") [
        ::amenu::validate_port::res = "Port can not be empty"
    ] [
        parsestring $::amenu::validate_port::value ::amenu::validate_port::char [
            if (! (testchar $::amenu::validate_port::char 0)) [
                ::amenu::validate_port::res = "port can contain only digits"
                breakparse
            ]
        ]
    ]

    result $::amenu::validate_port::res
]

addListOnQuit [::amenu::validate_port::value ::amenu::validate_port::res ::amenu::validate_port::char __::amenu::validate_port::char]

::amenu::validate_group = [
    ::amenu::validate_group::value = $arg1
    ::amenu::validate_group::res = ""
    if (strcmp $::amenu::validate_group::value "") [
        ::amenu::validate_group::res = "server group name can not be empty"
    ] [
        parsestring $::amenu::validate_group::value ::amenu::validate_group::char [
            if (! (|| (strstr "!#%&'*+,-.:;<>?@^_`{|}~" $::amenu::validate_group::char) (testchar $::amenu::validate_group::char 2))) [
                ::amenu::validate_group::res = "server group name can contain only letters, digits, and some punctuation"
                breakparse
            ]
        ]
    ]

    result $::amenu::validate_group::res
]

addListOnQuit [::amenu::validate_group::value ::amenu::validate_group::res ::amenu::validate_group::char __::amenu::validate_group::char]

::amenu::validate_server = [
    ::amenu::validate_server::res = (::amenu::validate_ip $arg1)

    if (strcmp $::amenu::validate_server::res "") [
        ::amenu::validate_server::res = (::amenu::validate_port $arg2)

        if (strcmp $::amenu::validate_server::res "") [
            ::amenu::validate_server::res = (::amenu::validate_group $arg3)

            if (strcmp $::amenu::validate_server::res "") [
                if (! (checkalias (::amenu::get_password_var $arg3))) [
                    ::amenu::validate_server::res = (concatword "server group '" $arg3 "' does not exist")
                ]
            ]
        ]
    ]

    result $::amenu::validate_server::res
]

addListOnQuit [::amenu::validate_server::res]

::amenu::add_group = [
    ::amenu::add_group::name = $arg1
    ::amenu::add_group::password = $arg2

    if (strcmp $::amenu::add_group::password "") [
        ::amenu::add_group::password = "!"
    ]

    ::amenu::add_group::error = (::amenu::validate_group $::amenu::add_group::name)

    if (strcmp $::amenu::add_group::error "") [
        if (checkalias (::amenu::get_password_var $::amenu::add_group::name)) [
            echo (concatword (c 3) "Error: " (c 5) "server group '" $::amenu::add_group::name "' already exists.")
        ] [
            ::amenu::perm_add2list ::amenu::groups $::amenu::add_group::name
            ::amenu::perm_alias (::amenu::get_servers_var $::amenu::add_group::name) "!"
            ::amenu::perm_alias (::amenu::get_password_var $::amenu::add_group::name) $::amenu::add_group::password
        ]
    ] [
        echo (concatword (c 3) "Error: " (c 5) $::amenu::add_group::error ".")
    ]
]

addListOnQuit [::amenu::add_group::name ::amenu::add_group::password ::amenu::add_group::error]

::amenu::show_add_group_menu = [
    ::amenu::show_add_group_menu::name = "Add server group"

    closemenu $::amenu::show_add_group_menu::name
    delmenu $::amenu::show_add_group_menu::name
    newmenu $::amenu::show_add_group_menu::name

    ::amenu::show_add_group_menu::group = ""
    ::amenu::show_add_group_menu::password = ""
    menuitemtextinput "Group name: " [result ""] [::amenu::show_add_group_menu::group = $arg1]
    menuitem "  Single word, some punctuation is allowed." -1
    menuitemtextinput "Admin password: " [result ""] [::amenu::show_add_group_menu::password = $arg1]
    menuitem "  Leave empty if unknown." -1
    menuitem "" -1
    menuitem "Save" [
        ::amenu::add_group $::amenu::show_add_group_menu::group $::amenu::show_add_group_menu::password
        closemenu $::amenu::show_add_group_menu::name
        ::amenu::show_view_groups_menu
    ]

    showmenu $::amenu::show_add_group_menu::name
]

addListOnQuit [::amenu::show_add_group_menu::name ::amenu::show_add_group_menu::group ::amenu::show_add_group_menu::password]

::amenu::show_edit_group_menu = [
    ::amenu::show_edit_group_menu::group = $arg1
    ::amenu::show_edit_group_menu::name = (concatword "Edit " $::amenu::show_edit_group_menu::group " server group")

    closemenu $::amenu::show_edit_group_menu::name
    delmenu $::amenu::show_edit_group_menu::name
    newmenu $::amenu::show_edit_group_menu::name

    ::amenu::show_edit_group_menu::password_var = (::amenu::get_password_var $::amenu::show_edit_group_menu::group)
    ::amenu::show_edit_group_menu::password = (getalias $::amenu::show_edit_group_menu::password_var)

    if (strcmp $::amenu::show_edit_group_menu::password "!") [
        ::amenu::show_edit_group_menu::password = ""
    ]

    ::amenu::show_edit_group_menu::new_group = $::amenu::show_edit_group_menu::group
    ::amenu::show_edit_group_menu::new_password = $::amenu::show_edit_group_menu::password

    menuitemtextinput "Group name: " [result $::amenu::show_edit_group_menu::group] [::amenu::show_edit_group_menu::new_group = $arg1]
    menuitem "  Single word, some punctuation is allowed." -1
    menuitemtextinput "Admin password: " [result $::amenu::show_edit_group_menu::password] [::amenu::show_edit_group_menu::new_password = $arg1]
    menuitem "  Leave empty if unknown." -1
    menuitem "" -1
    menuitem "Save" [
        ::amenu::show_edit_group_menu::error = (::amenu::validate_group $::amenu::show_edit_group_menu::new_group)

        if (strcmp $::amenu::show_edit_group_menu::error "") [
            ::amenu::perm_replace ::amenu::groups $::amenu::show_edit_group_menu::group $::amenu::show_edit_group_menu::new_group
            delalias $::amenu::show_edit_group_menu::password_var
            ::amenu::show_edit_group_menu::new_password_var = (::amenu::get_password_var $::amenu::show_edit_group_menu::new_group)

            if (strcmp $::amenu::show_edit_group_menu::new_password "") [
                ::amenu::perm_alias $::amenu::show_edit_group_menu::new_password_var "!"
            ] [
                ::amenu::perm_alias $::amenu::show_edit_group_menu::new_password_var $::amenu::show_edit_group_menu::new_password
            ]

            ::amenu::show_edit_group_menu::servers_var = (::amenu::get_servers_var $::amenu::show_edit_group_menu::group)
            ::amenu::show_edit_group_menu::servers = (getalias $::amenu::show_edit_group_menu::servers_var)
            delalias $::amenu::show_edit_group_menu::servers_var
            ::amenu::show_edit_group_menu::new_servers_var = (::amenu::get_servers_var $::amenu::show_edit_group_menu::new_group)
            ::amenu::perm_alias $::amenu::show_edit_group_menu::new_servers_var $::amenu::show_edit_group_menu::servers

            looplist $::amenu::show_edit_group_menu::servers ::amenu::show_edit_group_menu::server [
                ::amenu::show_edit_group_menu::ip = (::amenu::splitout_ip $::amenu::show_edit_group_menu::server)
                ::amenu::show_edit_group_menu::port = (::amenu::splitout_port $::amenu::show_edit_group_menu::server)
                ::amenu::perm_alias (::amenu::get_server_var $::amenu::show_edit_group_menu::ip $::amenu::show_edit_group_menu::port) $::amenu::show_edit_group_menu::new_group
            ]
        ] [
            echo (concatword (c 3) "Error: " (c 5) $::amenu::show_edit_group_menu::error ".")
        ]

        closemenu $::amenu::show_edit_group_menu::name
        closemenu (concatword $::amenu::show_edit_group_menu::group " servers")
        ::amenu::show_view_groups_menu
    ]

    showmenu $::amenu::show_edit_group_menu::name
]

addListOnQuit [
    ::amenu::show_edit_group_menu::group ::amenu::show_edit_group_menu::name ::amenu::show_edit_group_menu::password_var ::amenu::show_edit_group_menu::password
    ::amenu::show_edit_group_menu::new_group ::amenu::show_edit_group_menu::new_password ::amenu::show_edit_group_menu::error ::amenu::show_edit_group_menu::new_password_var
    ::amenu::show_edit_group_menu::servers_var ::amenu::show_edit_group_menu::servers ::amenu::show_edit_group_menu::new_servers_var ::amenu::show_edit_group_menu::server
    ::amenu::show_edit_group_menu::ip ::amenu::show_edit_group_menu::port
]

::amenu::show_delete_group_menu = [
    ::amenu::show_delete_group_menu::group = $arg1
    ::amenu::show_delete_group_menu::name = (concatword "Delete " $::amenu::show_delete_group_menu::group " server group")

    closemenu $::amenu::show_delete_group_menu::name
    delmenu $::amenu::show_delete_group_menu::name
    newmenu $::amenu::show_delete_group_menu::name

    menuitem "Yes" [
        ::amenu::perm_remove ::amenu::groups $::amenu::show_delete_group_menu::group
        delalias (::amenu::get_password_var $::amenu::show_delete_group_menu::group)
        ::amenu::show_delete_group_menu::servers_var = (::amenu::get_servers_var $::amenu::show_delete_group_menu::group)

        looplist (getalias $::amenu::show_delete_group_menu::servers_var) ::amenu::show_delete_group_menu::server [
            ::amenu::show_delete_group_menu::ip = (::amenu::splitout_ip $::amenu::show_delete_group_menu::server)
            ::amenu::show_delete_group_menu::port = (::amenu::splitout_port $::amenu::show_delete_group_menu::server)
            delalias (::amenu::get_server_var $::amenu::show_delete_group_menu::ip $::amenu::show_delete_group_menu::port)
            delalias (::amenu::get_descr_var $::amenu::show_delete_group_menu::ip $::amenu::show_delete_group_menu::port)
        ]

        delalias $::amenu::show_delete_group_menu::servers_var
        closemenu $::amenu::show_delete_group_menu::name
        closemenu (concatword $::amenu::show_delete_group_menu::group " servers")
        ::amenu::show_view_groups_menu
    ]
    menuitem "No" [
        closemenu $::amenu::show_delete_group_menu::name
    ]
    menuinitselection 1

    showmenu $::amenu::show_delete_group_menu::name
]

addListOnQuit [
    ::amenu::show_delete_group_menu::group ::amenu::show_delete_group_menu::name ::amenu::show_delete_group_menu::servers_var
    ::amenu::show_delete_group_menu::server ::amenu::show_delete_group_menu::ip ::amenu::show_delete_group_menu::port
]

::amenu::add_server = [
    ::amenu::add_server::ip = $arg1
    ::amenu::add_server::port = $arg2
    ::amenu::add_server::group = $arg3

    ::amenu::add_server::error = (::amenu::validate_server $::amenu::add_server::ip $::amenu::add_server::port $::amenu::add_server::group)

    if (strcmp $::amenu::add_server::error "") [
        ::amenu::add_server::server_var = (::amenu::get_server_var $::amenu::add_server::ip $::amenu::add_server::port)

        if (! (checkalias $::amenu::add_server::server_var)) [
            ::amenu::perm_add2list (::amenu::get_servers_var $::amenu::add_server::group) (concatword $::amenu::add_server::ip ":" $::amenu::add_server::port)
            ::amenu::perm_alias (::amenu::get_server_var $::amenu::add_server::ip $::amenu::add_server::port) $::amenu::add_server::group
            ::amenu::perm_alias (::amenu::get_descr_var $::amenu::add_server::ip $::amenu::add_server::port) "!"
        ] [
            ::amenu::add_server::error = (concatword "server '" $::amenu::add_server::ip ":" $::amenu::add_server::port "' already exists")
            ::amenu::add_server::error = (concatword $::amenu::add_server::error " (in server group '" (getalias $::amenu::add_server::server_var) "')")
        ]
    ]

    if (! (strcmp $::amenu::add_server::error "")) [
       echo (concatword (c 3) "Error: " (c 5) $::amenu::add_server::error ".")
    ]
]

addListOnQuit [::amenu::add_server::ip ::amenu::add_server::port ::amenu::add_server::group ::amenu::add_server::error ::amenu::add_server::server_var]

::amenu::show_add_server_menu = [
    ::amenu::show_add_server_menu::ip = $arg1
    ::amenu::show_add_server_menu::port = $arg2
    ::amenu::show_add_server_menu::group = $arg3

    if (strcmp $::amenu::show_add_server_menu::group "") [
        ::amenu::show_add_server_menu::name = "Add server"
    ] [
        ::amenu::show_add_server_menu::name = (concatword "Add " $::amenu::show_add_server_menu::group " server")
    ]

    closemenu $::amenu::show_add_server_menu::name
    delmenu $::amenu::show_add_server_menu::name
    newmenu $::amenu::show_add_server_menu::name

    menuitemtextinput "IP: " [result $::amenu::show_add_server_menu::ip] [::amenu::show_add_server_menu::ip = $arg1]
    menuitemtextinput "Port: " [result $::amenu::show_add_server_menu::port] [::amenu::show_add_server_menu::port = $arg1]

    if (strcmp $::amenu::show_add_server_menu::group "") [
        menuitemtextinput "Server group: " [result $::amenu::show_add_server_menu::group] [::amenu::show_add_server_menu::group = $arg1]
    ]

    menuitem "" -1
    menuitem "Save" [
        ::amenu::add_server $::amenu::show_add_server_menu::ip $::amenu::show_add_server_menu::port $::amenu::show_add_server_menu::group
        closemenu $::amenu::show_add_server_menu::name
    ]

    if (! (strcmp $::amenu::show_add_server_menu::ip "")) [
        menuinitselection 2
    ]

    showmenu $::amenu::show_add_server_menu::name
]

addListOnQuit [
    ::amenu::show_add_server_menu::name ::amenu::show_add_server_menu::ip ::amenu::show_add_server_menu::port
    ::amenu::show_add_server_menu::group
]

::amenu::show_edit_server_menu = [
    ::amenu::show_edit_server_menu::ip = $arg1
    ::amenu::show_edit_server_menu::port = $arg2
    ::amenu::show_edit_server_menu::id = (concatword $::amenu::show_edit_server_menu::ip ":" $::amenu::show_edit_server_menu::port)
    ::amenu::show_edit_server_menu::name = (concatword "Edit " $::amenu::show_edit_server_menu::id " server")

    closemenu $::amenu::show_edit_server_menu::name
    delmenu $::amenu::show_edit_server_menu::name
    newmenu $::amenu::show_edit_server_menu::name

    ::amenu::show_edit_server_menu::server_var = (::amenu::get_server_var $::amenu::show_edit_server_menu::ip $::amenu::show_edit_server_menu::port)
    ::amenu::show_edit_server_menu::group = (getalias $::amenu::show_edit_server_menu::server_var)

    ::amenu::show_edit_server_menu::new_ip = $::amenu::show_edit_server_menu::ip
    ::amenu::show_edit_server_menu::new_port = $::amenu::show_edit_server_menu::port

    menuitemtextinput "IP: " [result $::amenu::show_edit_server_menu::ip] [::amenu::show_edit_server_menu::new_ip = $arg1]
    menuitemtextinput "Port: " [result $::amenu::show_edit_server_menu::port] [::amenu::show_edit_server_menu::new_port = $arg1]
    menuitem "" -1

    menuitem "Save" [
        ::amenu::show_edit_server_menu::error = (::amenu::validate_server $::amenu::show_edit_server_menu::new_ip $::amenu::show_edit_server_menu::new_port $::amenu::show_edit_server_menu::group)

        if (strcmp $::amenu::show_edit_server_menu::error "") [
            if (! (&& (strcmp $::amenu::show_edit_server_menu::new_ip $::amenu::show_edit_server_menu::ip) (strcmp $::amenu::show_edit_server_menu::new_port $::amenu::show_edit_server_menu::port))) [
                ::amenu::show_edit_server_menu::new_server_var = (::amenu::get_server_var $::amenu::show_edit_server_menu::new_ip $::amenu::show_edit_server_menu::new_port)

                if (checkalias $::amenu::show_edit_server_menu::new_server_var) [
                    ::amenu::show_edit_server_menu::error = (concatword "server '" $::amenu::show_edit_server_menu::new_ip ":" $::amenu::show_edit_server_menu::new_port "' already exists")
                    ::amenu::show_edit_server_menu::error = (concatword $::amenu::show_edit_server_menu::error " (in server group '" (getalias $::amenu::show_edit_server_menu::new_server_var) "')")
                ] [
                    ::amenu::show_edit_server_menu::new_id = (concatword $::amenu::show_edit_server_menu::new_ip ":" $::amenu::show_edit_server_menu::new_port)
                    ::amenu::perm_replace (::amenu::get_servers_var $::amenu::show_edit_server_menu::group) $::amenu::show_edit_server_menu::id $::amenu::show_edit_server_menu::new_id
                    delalias $::amenu::show_edit_server_menu::server_var
                    delalias (::amenu::get_descr_var $::amenu::show_edit_server_menu::ip $::amenu::show_edit_server_menu::port)
                    ::amenu::perm_alias (::amenu::get_descr_var $::amenu::show_edit_server_menu::new_ip $::amenu::show_edit_server_menu::new_port) "!"
                    ::amenu::perm_alias (::amenu::get_server_var $::amenu::show_edit_server_menu::new_ip $::amenu::show_edit_server_menu::new_port) $::amenu::show_edit_server_menu::group
                ]
            ]
        ]

        if (! (strcmp $::amenu::show_edit_server_menu::error "")) [
            echo (concatword (c 3) "Error: " (c 5) $::amenu::show_edit_server_menu::error ".")
        ]

        closemenu $::amenu::show_edit_server_menu::name
    ]

    showmenu $::amenu::show_edit_server_menu::name
]

addListOnQuit [
    ::amenu::show_edit_server_menu::ip ::amenu::show_edit_server_menu::port ::amenu::show_edit_server_menu::id ::amenu::show_edit_server_menu::name
    ::amenu::show_edit_server_menu::server_var ::amenu::show_edit_server_menu::group ::amenu::show_edit_server_menu::new_ip ::amenu::show_edit_server_menu::new_port
    ::amenu::show_edit_server_menu::error ::amenu::show_edit_server_menu::new_server_var ::amenu::show_edit_server_menu::new_id
]

::amenu::show_delete_server_menu = [
    ::amenu::show_delete_server_menu::ip = $arg1
    ::amenu::show_delete_server_menu::port = $arg2
    ::amenu::show_delete_server_menu::id = (concatword $::amenu::show_delete_server_menu::ip ":" $::amenu::show_delete_server_menu::port)
    ::amenu::show_delete_server_menu::name = (concatword "Delete " $::amenu::show_delete_server_menu::id " server")

    closemenu $::amenu::show_delete_server_menu::name
    delmenu $::amenu::show_delete_server_menu::name
    newmenu $::amenu::show_delete_server_menu::name

    ::amenu::show_delete_server_menu::server_var = (::amenu::get_server_var $::amenu::show_delete_server_menu::ip $::amenu::show_delete_server_menu::port)
    ::amenu::show_delete_server_menu::group = (getalias $::amenu::show_delete_server_menu::server_var)
    ::amenu::show_delete_server_menu::servers_var = (::amenu::get_servers_var $::amenu::show_delete_server_menu::group)

    menuitem "Yes" [
        ::amenu::perm_remove $::amenu::show_delete_server_menu::servers_var $::amenu::show_delete_server_menu::id
        delalias $::amenu::show_delete_server_menu::server_var
        delalias (::amenu::get_descr_var $::amenu::show_delete_server_menu::ip $::amenu::show_delete_server_menu::port)
        closemenu $::amenu::show_delete_server_menu::name
        closemenu (concatword $::amenu::show_delete_server_menu::id " server")
    ]
    menuitem "No" [
        closemenu $::amenu::show_delete_server_menu::name
    ]
    menuinitselection 1

    showmenu $::amenu::show_delete_server_menu::name
]

addListOnQuit [
    ::amenu::show_delete_server_menu::ip ::amenu::show_delete_server_menu::port ::amenu::show_delete_server_menu::id
    ::amenu::show_delete_server_menu::name ::amenu::show_delete_server_menu::server_var ::amenu::show_delete_server_menu::group ::amenu::show_delete_server_menu::servers_var
]

::amenu::show_view_server_menu = [
    ::amenu::show_view_server_menu::ip = $arg1
    ::amenu::show_view_server_menu::port = $arg2
    ::amenu::show_view_server_menu::name = (concatword $::amenu::show_view_server_menu::ip ":" $::amenu::show_view_server_menu::port " server")

    closemenu $::amenu::show_view_server_menu::name
    delmenu $::amenu::show_view_server_menu::name
    newmenu $::amenu::show_view_server_menu::name

    ::amenu::show_view_server_menu::group = (getalias (::amenu::get_server_var $::amenu::show_view_server_menu::ip $::amenu::show_view_server_menu::port))
    ::amenu::show_view_server_menu::password = (getalias (::amenu::get_password_var $::amenu::show_view_server_menu::group))

    menuitem "Connect to this server" [
        if (strcmp $::amenu::show_view_server_menu::password "!") [
            connect $::amenu::show_view_server_menu::ip $::amenu::show_view_server_menu::port
        ] [
            connect $::amenu::show_view_server_menu::ip $::amenu::show_view_server_menu::port $::amenu::show_view_server_menu::password
        ]
    ]
    menuitem "Edit this server" [::amenu::show_edit_server_menu $::amenu::show_view_server_menu::ip $::amenu::show_view_server_menu::port]
    menuitem "Delete this server" [::amenu::show_delete_server_menu $::amenu::show_view_server_menu::ip $::amenu::show_view_server_menu::port [
        closemenu $::amenu::show_view_server_menu::name
    ]]
    menuitem "" -1
    menuitem (concatword "IP: " $::amenu::show_view_server_menu::ip) -1
    menuitem (concatword "Port: " $::amenu::show_view_server_menu::port) -1

    if (strcmp $::amenu::show_view_server_menu::password "!") [
        ::amenu::show_view_server_menu::label = " (no password)"
    ] [
        ::amenu::show_view_server_menu::label = ""
    ]

    menuitem (concatword "Group: " $::amenu::show_view_server_menu::group $::amenu::show_view_server_menu::label) -1

    showmenu $::amenu::show_view_server_menu::name
]

addListOnQuit [
    ::amenu::show_view_server_menu::ip ::amenu::show_view_server_menu::port ::amenu::show_view_server_menu::name
    ::amenu::show_view_server_menu::group ::amenu::show_view_server_menu::password ::amenu::show_view_server_menu::label
]

::amenu::show_view_group_menu = [
    ::amenu::show_view_group_menu::group = $arg1
    ::amenu::show_view_group_menu::name = (concatword $::amenu::show_view_group_menu::group " servers")

    closemenu $::amenu::show_view_group_menu::name
    delmenu $::amenu::show_view_group_menu::name
    newmenu $::amenu::show_view_group_menu::name

    menuitem "Edit this server group" [::amenu::show_edit_group_menu $::amenu::show_view_group_menu::group]
    menuitem "Delete this server group" [::amenu::show_delete_group_menu $::amenu::show_view_group_menu::group]
    menuitem "Add server" [::amenu::show_add_server_menu "" "" $::amenu::show_view_group_menu::group [
        closemenu $::amenu::show_view_group_menu::name
        ::amenu::show_view_groups_menu
        ::amenu::show_view_group_menu $::amenu::show_view_group_menu::group
    ]]

    ::amenu::show_view_group_menu::servers = (getalias (::amenu::get_servers_var $::amenu::show_view_group_menu::group))

    if (! (strcmp $::amenu::show_view_group_menu::servers "!")) [
        menuitem "" -1

        looplist $::amenu::show_view_group_menu::servers ::amenu::show_view_group_menu::server [
            ::amenu::show_view_group_menu::ip = (::amenu::splitout_ip $::amenu::show_view_group_menu::server)
            ::amenu::show_view_group_menu::port = (::amenu::splitout_port $::amenu::show_view_group_menu::server)
            ::amenu::show_view_group_menu::command = (concat "::amenu::show_view_server_menu" $::amenu::show_view_group_menu::ip $::amenu::show_view_group_menu::port)
            menuitem $::amenu::show_view_group_menu::server $::amenu::show_view_group_menu::command
        ]
    ]

    showmenu $::amenu::show_view_group_menu::name
]

addListOnQuit [
    ::amenu::show_view_group_menu::group ::amenu::show_view_group_menu::name ::amenu::show_view_group_menu::servers ::amenu::show_view_group_menu::server
    ::amenu::show_view_group_menu::ip ::amenu::show_view_group_menu::port ::amenu::show_view_group_menu::command
]

::amenu::show_view_groups_menu = [
    ::amenu::show_view_groups_menu::name = "Server groups"

    closemenu $::amenu::show_view_groups_menu::name
    delmenu $::amenu::show_view_groups_menu::name
    newmenu $::amenu::show_view_groups_menu::name

    menuitem "Add server group" [::amenu::show_add_group_menu]

    if (! (strcmp $::amenu::groups "!")) [
        menuitem "" -1

        looplist $::amenu::groups ::amenu::show_view_groups_menu::group [
            ::amenu::show_view_groups_menu::servers = (getalias (::amenu::get_servers_var $::amenu::show_view_groups_menu::group))
            ::amenu::show_view_groups_menu::servers_num = 0

            if (strcmp $::amenu::show_view_groups_menu::servers "!") [
                ::amenu::show_view_groups_menu::servers_num = 0
            ] [
                ::amenu::show_view_groups_menu::servers_num = (listlen $::amenu::show_view_groups_menu::servers)
            ]

            if (= $::amenu::show_view_groups_menu::servers_num 1) [
                ::amenu::show_view_groups_menu::label = "1 server"
            ] [
                ::amenu::show_view_groups_menu::label = (concat $::amenu::show_view_groups_menu::servers_num "servers")
            ]

            ::amenu::show_view_groups_menu::password = (getalias (::amenu::get_password_var $::amenu::show_view_groups_menu::group))

            if (strcmp $::amenu::show_view_groups_menu::password "!") [
                ::amenu::show_view_groups_menu::label = (concatword $::amenu::show_view_groups_menu::label ", no password")
            ]

            ::amenu::show_view_groups_menu::item_name = (concatword $::amenu::show_view_groups_menu::group " (" $::amenu::show_view_groups_menu::label ")")
            ::amenu::show_view_groups_menu::command = (concat "::amenu::show_view_group_menu" $::amenu::show_view_groups_menu::group)
            menuitem $::amenu::show_view_groups_menu::item_name $::amenu::show_view_groups_menu::command
        ]
    ]

    showmenu $::amenu::show_view_groups_menu::name
]

addListOnQuit [
    ::amenu::show_view_groups_menu::name ::amenu::show_view_groups_menu::group ::amenu::show_view_groups_menu::servers ::amenu::show_view_groups_menu::servers_num
    ::amenu::show_view_groups_menu::password ::amenu::show_view_groups_menu::label ::amenu::show_view_groups_menu::item_name ::amenu::show_view_groups_menu::command
]

::amenu::show_settings_menu = [
    ::amenu::show_settings_menu::name = "Admin tools settings"

    closemenu $::amenu::show_settings_menu::name
    delmenu $::amenu::show_settings_menu::name
    newmenu $::amenu::show_settings_menu::name

    menuitemkeyinput "Atools menu bind (ENTER to edit): " ::amenu::show_main_menu
    menuitemcheckbox "Drop admin after use: " [result $::atools::auto_drop] [::amenu::perm_alias ::atools::auto_drop $arg1]
    menuitemcheckbox "Take screenshot of ban log message: " [result $::atools::take_ss] [::amenu::perm_alias ::atools::take_ss $arg1]
    menuitemcheckbox "Change name when claiming admin: " [result $::atools::use_name] [::amenu::perm_alias ::atools::use_name $arg1]
    menuitemtextinput "  Admin name: " [result $::atools::name] [::amenu::perm_alias ::atools::name $arg1] "" 15

    showmenu $::amenu::show_settings_menu::name
]

addListOnQuit [::amenu::show_settings_menu::name]

::amenu::show_main_menu = [
    ::amenu::show_main_menu::name = "Admin tools"

    closemenu $::amenu::show_main_menu::name
    delmenu $::amenu::show_main_menu::name
    newmenu $::amenu::show_main_menu::name

    if (::amenu::have_current_server) [
        menuitem (concatword "View current server (" (::amenu::current_server_group) ")") [::amenu::show_view_server_menu (curserver 1) (curserver 3) ::amenu::show_main_menu]
    ] [
        menuitem "Add current server" [::amenu::show_add_server_menu (curserver 1) (curserver 3) "" ::amenu::show_main_menu]
    ]

    menuitem "Manage server groups" [::amenu::show_view_groups_menu]
    menuitem "Settings" [::amenu::show_settings_menu]

    showmenu $::amenu::show_main_menu::name
]

addListOnQuit [::amenu::show_main_menu::name]

// Admin menu end

docsection "Admin tools"

docident [claimadmin] [Claims admin if not already claimed.]

claimadmin = [
    if (! (currole)) [
        if (|| (! (checkalias apassword)) (strcmp $apassword "")) [
            echo (concatword (c 3) "Error: " (c 5) "admin password is not set.")
        ] [
            if ($::atools::use_name) [
                name $::atools::name
            ]

            setadmin 1 $apassword
        ]
    ]
]

::atools::withadmin::delay = 10
::atools::withadmin::tries = 200

::atools::withadmin::loop = [
    if (currole) [
        execute $::atools::withadmin::command

        if $::atools::auto_drop [
            sleep 300 [
                setadmin 0
                name $::withadmin::prev_name
            ]
        ]
    ] [
        if (<= $::atools::withadmin::sleeps 1) [
            echo "withadmin timed out."
        ] [
            -- ::atools::withadmin::sleeps
            sleep $::atools::withadmin::delay [::atools::withadmin::loop]
        ]
    ]
]

docident [withadmin] [Executes a command after claiming admin.]
docargument [C] [The command to execute] [] [0];

withadmin = [
    ::atools::withadmin::command = $arg1

    ::withadmin::prev_name = $curname
    claimadmin
    ::atools::withadmin::sleeps = $::atools::withadmin::tries
    ::atools::withadmin::loop
]

addListOnQuit [::atools::withadmin::command ::withadmin::prev_name ::atools::withadmin::sleeps]

::atools::valid_reason = [
    ::atools::valid_reason::res = $arg1

    if (<= (strlen $::atools::valid_reason::res) 3) [
        ::atools::valid_reason::res = (concatword $::atools::valid_reason::res "...")
    ]

    result $::atools::valid_reason::res
]

addListOnQuit [::atools::valid_reason::res]

docident [akick] [Kicks the specified player as admin.]
docargument [CN] [The player to kick] [Client number] [0]
docargument [R] [Kick reason, will be extended if too short] [] [0]

akick = [
    ::atools::akick::cn = $arg1
    ::atools::akick::reason = (::atools::valid_reason $arg2)

    withadmin [
        vote 2

        sleep 10 [
            kick $::atools::akick::cn $::atools::akick::reason
        ]
    ]
]

addListOnQuit [::atools::akick::cn ::atools::akick::reason]

docident [aban] [Bans the specified player as admin. Prints player IP to console and screenshots it.]
docargument [CN] [The player to ban] [Client number] [0]
docargument [R] [Ban reason, will be extended if too short or replaced with a default if empty] [] [0]

aban = [
    ::atools::aban::cn = $arg1
    ::atools::aban::reason = $arg2

    if (strcmp $::atools::aban::reason "") [
        ::atools::aban::reason = "default reason (probably a cheater)"
    ]

    ::atools::aban::reason = (::atools::valid_reason $::atools::aban::reason)

    withadmin [
        ::atools::aban::ip = (player $::atools::aban::cn ip)
        ::atools::aban::name = (findpn $::atools::aban::cn)
        ::atools::aban::msg = (concatword "Banned " $::atools::aban::name " (IP: " $::atools::aban::ip "), reason: " $::atools::aban::reason ", server: " (curserver 2) ":" (curserver 3) ".")
        echo $::atools::aban::msg
        vote 2

        sleep 10 [
            ban $::atools::aban::cn $::atools::aban::reason

            if $::atools::take_ss [
                consize 10
                conskip -1

                sleep 300 [
                    screenshot

                    sleep 100 [
                        consize 6
                        conskip -1
                    ]
                ]
            ]
        ]
    ]
]

addListOnQuit [::atools::aban::cn ::atools::aban::reason ::atools::aban::ip ::atools::aban::name ::atools::aban::msg]

docident [abanname] [Bans the specified player by name as admin. Prints player IP to console and screenshots it.]
docargument [N] [The player to ban] [Name] [0]
docargument [R] [Ban reason, will be extended if too short or replaced with a default if empty] [] [0]

abanname = [
    ::atools::abanname::name = $arg1
    ::atools::abanname::reason = $arg2
    ::atools::abanname::cn = (findcn $::atools::abanname::name)

    if (= $::atools::abanname::cn -1) [
        echo (concatword "No player named " $::atools::abanname::name)
    ] [
        aban $::atools::abanname::cn $::atools::abanname::reason
    ]
]

addListOnQuit [::atools::abanname::name ::atools::abanname::reason ::atools::abanname::cn]

nickcomplete abanname

::atools::maskip = [
    ::atools::maskip::ip = $arg1
    ::atools::maskip::res = ".x"
    ::atools::maskip::after_dot = 0

    parsestring $::atools::maskip::ip ::atools::maskip::char [
        if $::atools::maskip::after_dot [
            ::atools::maskip::res = (concatword $::atools::maskip::char $::atools::maskip::res)
        ] [
            if (strcmp $::atools::maskip::char ".") [
                ::atools::maskip::after_dot = 1
            ]
        ]
    ] 1

    result $::atools::maskip::res
]

addListOnQuit [::atools::maskip::ip ::atools::maskip::res ::atools::maskip::after_dot ::atools::maskip::char __::atools::maskip::char]

docident [findcnbyip] [Find client number (cn) given an IP.]
docargument [IP] [The IP string] [] [0]
docremark [The lowest byte of the IP is ignored.]

findcnbyip = [
    ::atools::findcnbyip::ip = (::atools::maskip $arg1)
    ::atools::findcnbyip::res = -1

    loop ::atools::findcnbyip::i (+ (highestcn) 1) [
        if (isclient $::atools::findcnbyip::i) [
            ::atools::findcnbyip::player_ip = (::atools::maskip (player $::atools::findcnbyip::i ip))

            if (strcmp $::atools::findcnbyip::player_ip $::atools::findcnbyip::ip) [
                ::atools::findcnbyip::res = $::atools::findcnbyip::i
            ]
        ]
    ]

    result $::atools::findcnbyip::res
]

addListOnQuit [::atools::findcnbyip::ip ::atools::findcnbyip::res ::atools::findcnbyip::i ::atools::findcnbyip::player_ip]

docident [abanip] [Bans the specified player by IP as admin. Prints player IP to console and screenshots it.]
docargument [IP] [The player to ban] [IP string] [0]
docargument [R] [Ban reason, will be extended if too short or replaced with a default if empty] [] [0]

abanip = [
    ::atools::abanip::ip = $arg1
    ::atools::abanip::reason = $arg2
    ::atools::abanip::cn = (findcnbyip $::atools::abanip::ip)

    if (= $::atools::abanip::cn -1) [
        echo (concatword "No player with IP matching " (::atools::maskip $::atools::abanip::ip))
    ] [
        aban $::atools::abanip::cn $::atools::abanip::reason
    ]
]

addListOnQuit [::atools::abanip::ip ::atools::abanip::reason ::atools::abanip::cn]

docident [whoare] [Echo the list of connected players and their IPs.]

whoare = [
    loop ::atools::whoare::i (+ (highestcn) 1) [
        if (isclient $::atools::whoare::i) [
            ::atools::whoare::name = (findpn $::atools::whoare::i)
            ::atools::whoare::ip = (player $::atools::whoare::i ip)

            echo (concatword $::atools::whoare::name " (" $::atools::whoare::i "): " $::atools::whoare::ip)
        ]
    ]
]

addListOnQuit [::atools::whoare::i ::atools::whoare::name ::atools::whoare::ip]

docident [awhoare] [Echo the list of connected players and their IPs as admin.]

awhoare = [
    withadmin [
        whoare
    ]
]

persistidents 1

if (! (checkalias ::amenu::groups)) [
    ::amenu::groups = "!"
    bind X ::amenu::show_main_menu

    ::amenu::add_group w00p ""
    ::amenu::add_server 62.210.131.155 1999 w00p
    ::amenu::add_server 62.210.131.155 2999 w00p
    ::amenu::add_server 62.210.131.155 3999 w00p
    ::amenu::add_server 62.210.131.155 4999 w00p
    ::amenu::add_server 62.210.131.155 10000 w00p
    ::amenu::add_server 62.210.131.155 28763 w00p
    ::amenu::add_server 45.34.167.87 1999 w00p
    ::amenu::add_server 45.34.167.87 28763 w00p

    ::amenu::add_group frag.gq ""
    ::amenu::add_server 154.127.61.199 5500 frag.gq
    ::amenu::add_server 154.127.61.199 5555 frag.gq
    ::amenu::add_server 139.59.2.63 5500 frag.gq
    ::amenu::add_server 139.59.2.63 5555 frag.gq
    ::amenu::add_server 107.191.56.242 5500 frag.gq
    ::amenu::add_server 107.191.56.242 5555 frag.gq
    ::amenu::add_server 185.99.132.109 5500 frag.gq
    ::amenu::add_server 185.99.132.109 5555 frag.gq
    ::amenu::add_server 31.220.7.213 5500 frag.gq
    ::amenu::add_server 31.220.7.213 5555 frag.gq
    ::amenu::add_server 81.4.107.119 5500 frag.gq
    ::amenu::add_server 81.4.107.119 5555 frag.gq
    ::amenu::add_server 192.99.139.152 5500 frag.gq
    ::amenu::add_server 192.99.139.152 5555 frag.gq
    ::amenu::add_server 149.56.249.50 5500 frag.gq
    ::amenu::add_server 149.56.249.50 5555 frag.gq
    ::amenu::add_server 45.58.49.82 5500 frag.gq
    ::amenu::add_server 45.58.49.82 5555 frag.gq
    ::amenu::add_server 45.58.52.254 5500 frag.gq
    ::amenu::add_server 45.58.52.254 5555 frag.gq
    ::amenu::add_server 104.223.64.157 5500 frag.gq
    ::amenu::add_server 104.223.64.157 5555 frag.gq
    ::amenu::add_server 107.191.116.149 5500 frag.gq
    ::amenu::add_server 107.191.116.149 5555 frag.gq
    ::amenu::add_server 181.41.217.37 9999 frag.gq
    ::amenu::add_server 181.41.217.37 1111 frag.gq
    ::amenu::add_server 191.96.4.182 9999 frag.gq
    ::amenu::add_server 191.96.4.182 1111 frag.gq

    ::amenu::add_group PSY ""
    ::amenu::add_server 151.80.242.147 8000 PSY
    ::amenu::add_server 151.80.242.147 9000 PSY
    ::amenu::add_server 151.80.242.147 16000 PSY
    ::amenu::add_server 151.80.242.147 28763 PSY

    ::amenu::add_group BVH ""
    ::amenu::add_server 212.51.143.140 28900
    ::amenu::add_server 212.51.143.140 28902
    ::amenu::add_server 212.51.143.140 28904
    ::amenu::add_server 212.51.143.140 28906
    ::amenu::add_server 212.51.143.140 28908
    ::amenu::add_server 212.51.143.140 28910
    ::amenu::add_server 212.51.143.140 28912
    ::amenu::add_server 212.51.143.140 28914

    ::amenu::add_group aCKa ""
    ::amenu::add_server 37.187.176.129 9000
    ::amenu::add_server 37.187.176.129 9002
    ::amenu::add_server 37.187.176.129 9999
    ::amenu::add_server 37.187.176.129 28765

    ::amenu::add_group SE
    ::amenu::add_server 46.239.122.33 29762
    ::amenu::add_server 46.239.122.33 29764
    ::amenu::add_server 46.239.122.33 29766

    ::amenu::add_group Brute ""
    ::amenu::add_server 90.191.207.200 28888

    ::amenu::add_group Avengers ""
    ::amenu::add_server 137.74.61.119 11111

    ::amenu::add_group German_Free ""
    ::amenu::add_server 93.186.197.163 28763
]
