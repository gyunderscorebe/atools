// Admin tools by gy_be (version 0.1.0)
//
// How to install: copy contents of this file into your `autoexec.cfg` file
// in `config/` directory, or download it and put into `config/` directory
// as `atools.cfg` and add `exec config/atools.cfg` to `autoexec.cfg`.
//
// How to configure: set `$apassword` to your admin password.
// E.g. put `apassword = "MY_PASSWORD"` into `autoexec.cfg` after
// this file is executed. If you have different admin passwords on different
// servers you can make helper commands that set the password.
// E.g. `itsfrag = [apassword = "MY_FRAGGQ_PASSWORD"]`,
// `itswoop = [apassword = "MY_WOOP_PASSWORD"]`, etc., and then
// run corresponding command after connecting to a server to switch
// passwords, manually or using some autodetection in `mapstartalways`.
// Optionally set `$aname` to your main nickname to switch to it when
// claiming admin.
//
// Added commands:
//
//      aban - instant ban by client number
//      abanname - instant ban by name
//      abanip - instant ban by IP
//      akick - instant kick
//      whoare - list IPs of all players without claiming admin
//      awhoare - list full IPs of all players
//      findcnbyip - get client number by IP
//      claimadmin - claim admin
//      withadmin - execute a command as admin
//
// See in-game documentation for more information.

persistidents 0

docsection "Admin tools"

// If this is not empty string, will set name to this value before claiming admin.
aname = ""

// Password used when claiming admin.
apassword = ""

docident [claimadmin] [Claims admin if not already claimed. Uses $apassword as password. Sets name to $aname unless it's empty.];

claimadmin = [
    if (! (currole)) [
        if (! (strcmp $aname "")) [
            name $aname
        ]

        setadmin 1 $apassword
    ]
]

_withadmin_delay = 10
_withadmin_tries = 200

_withadmin_loop = [
    if (currole) [
        execute $_withadmin_command
    ] [
        if (<= $_withadmin_sleeps 1) [
            echo "withadmin timed out."
        ] [
            -- _withadmin_sleeps
            sleep $_withadmin_delay [_withadmin_loop]
        ]
    ]
]

docident [withadmin] [Executes a command after claiming admin.]
docargument [C] [The command to execute] [] [0];

withadmin = [
    _withadmin_command = $arg1

    claimadmin
    _withadmin_sleeps = $_withadmin_tries
    _withadmin_loop
]

_valid_reason = [
    _valid_reason_res = $arg1

    if (<= (strlen $_valid_reason_res) 3) [
        _valid_reason_res = (concatword $_valid_reason_res "...")
    ]

    result $_valid_reason_res
]

docident [akick] [Kicks the specified player as admin.]
docargument [CN] [The player to kick] [Client number] [0]
docargument [R] [Kick reason, will be extended if too short] [] [0]

akick = [
    _akick_cn = $arg1
    _akick_reason = (_valid_reason $arg2)

    withadmin [
        vote 2

        sleep 10 [
            kick $_akick_cn $_akick_reason
        ]
    ]
]

docident [aban] [Bans the specified player as admin. Prints player IP to console and screenshots it.]
docargument [CN] [The player to ban] [Client number] [0]
docargument [R] [Ban reason, will be extended if too short or replaced with a default if empty] [] [0]

aban = [
    _aban_cn = $arg1
    _aban_reason = $arg2

    if (strcmp $_aban_reason "") [
        _aban_reason = "default reason (probably a cheater)"
    ]

    _aban_reason = (_valid_reason $_aban_reason)

    withadmin [
        _aban_ip = (player $_aban_cn ip)
        _aban_name = (findpn $_aban_cn)
        _aban_msg = (concatword "Banned " $_aban_name " (IP: " $_aban_ip "), reason: " $_aban_reason ", server: " (curserver 2) ":" (curserver 3) ".")
        echo $_aban_msg
        vote 2

        sleep 10 [
            ban $_aban_cn $_aban_reason

            consize 10
            conskip -1

            sleep 300 [
                screenshot

                sleep 100 [
                    consize 6
                    conskip -1
                ]
            ]
        ]
    ]
]

docident [abanname] [Bans the specified player by name as admin. Prints player IP to console and screenshots it.]
docargument [N] [The player to ban] [Name] [0]
docargument [R] [Ban reason, will be extended if too short or replaced with a default if empty] [] [0]

abanname = [
    _abanname_name = $arg1
    _abanname_reason = $arg2
    _abanname_cn = (findcn $_abanname_name)

    if (= $_abanname_cn -1) [
        echo (concatword "No player named " $_abanname_name)
    ] [
        aban $_abanname_cn $_abanname_reason
    ]
]

nickcomplete abanname

_maskip = [
    _maskip_ip = $arg1
    _maskip_res = ".x"
    _maskip_after_dot = 0

    parsestring $_maskip_ip _maskip_char [
        if $_maskip_after_dot [
            _maskip_res = (concatword $_maskip_char $_maskip_res)
        ] [
            if (strcmp $_maskip_char ".") [
                _maskip_after_dot = 1
            ]
        ]
    ] 1

    result $_maskip_res
]

docident [findcnbyip] [Find client number (cn) given an IP.]
docargument [IP] [The IP string] [] [0]
docremark [The lowest byte of the IP is ignored.]

findcnbyip = [
    _findcnbyip_ip = (_maskip $arg1)
    _findcnbyip_res = -1

    loop _findcnbyip_i (+ (highestcn) 1) [
        if (isclient $_findcnbyip_i) [
            _findcnbyip_player_ip = (_maskip (player $_findcnbyip_i ip))

            if (strcmp $_findcnbyip_player_ip $_findcnbyip_ip) [
                _findcnbyip_res = $_findcnbyip_i
            ]
        ]
    ]

    result $_findcnbyip_res
]

docident [abanip] [Bans the specified player by IP as admin. Prints player IP to console and screenshots it.]
docargument [IP] [The player to ban] [IP string] [0]
docargument [R] [Ban reason, will be extended if too short or replaced with a default if empty] [] [0]

abanip = [
    _abanip_ip = $arg1
    _abanip_reason = $arg2
    _abanip_cn = (findcnbyip $_abanip_ip)

    if (= $_abanip_cn -1) [
        echo (concatword "No player with IP matching " (_maskip $_abanip_ip))
    ] [
        aban $_abanip_cn $_abanip_reason
    ]
]

docident [whoare] [Echo the list of connected players and their IPs.]

whoare = [
    loop _whoare_i (+ (highestcn) 1) [
        if (isclient $_whoare_i) [
            _whoare_name = (findpn $_whoare_i)
            _whoare_ip = (player $_whoare_i ip)

            echo (concatword $_whoare_name " (" $_whoare_i "): " $_whoare_ip)
        ]
    ]
]

docident [awhoare] [Echo the list of connected players and their IPs as admin.]

awhoare = [
    withadmin [
        whoare
    ]
]

persistidents 1
